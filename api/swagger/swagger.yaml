swagger: "2.0"
info:
  version: "0.0.1"
  title: Parken API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /sensorData/{id}:
    # our controller name
    x-swagger-router-controller: sensor_data
    get:
      description: get sensor data
      # define the type of response for Success "200" and Error
      operationId: sensorData
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSensorDataResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /sensorDataList:
    # our controller name
    x-swagger-router-controller: sensor_data
    get:
      description: get top sensor data
      # define the type of response for Success "200" and Error
      operationId: sensorDataList
      parameters:
        - in: query
          name: sensor
          type: string
          description: The sensor name
          required: false
        - in: query
          name: limit
          type: number
          description: The limit of records
          required: true
        - in: query
          name: offset
          type: number
          description: The offset of records
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSensorDataResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /sensorDataByDate:
    # our controller name
    x-swagger-router-controller: sensor_data
    get:
      description: get top sensor data by date
      # define the type of response for Success "200" and Error
      operationId: sensorDataByDate
      parameters:
        - in: query
          name: sensor
          type: string
          description: The sensor name
          required: false
        - in: query
          name: start_date
          type: string
          description: The start date
          required: true
        - in: query
          name: end_date
          type: string
          description: The end date
          required: true
        - in: query
          name: interval
          type: string
          description: The result interval
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetSensorDataResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetSensorDataResponse:
    required:
      - sensorData
    properties:
      sensorData:
        type: array
        items: 
          type: object
          properties:
            id:
              type: number
            id_wasp:
              type: string
            sensor:
              type: string
            value:
              type: string
            timestamp:
              type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
